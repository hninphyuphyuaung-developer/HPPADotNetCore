@model ApexChartScatterChartResponseModel
<div id="chart"></div>

@section scripts{
    <script>
      
        var options = {
          series: @Html.Raw(JsonConvert.SerializeObject(Model.Series)),
          chart: {
          height: 350,
          type: 'scatter',
          zoom: {
            enabled: true,
            type: 'xy'
          }
        },
        xaxis: {
          tickAmount: 10,
          labels: {
            formatter: function(val) {
              return parseFloat(val).toFixed(1)
            }
          }
        },
        yaxis: {
          tickAmount: 7
        }
        };

        var chart = new ApexCharts(document.querySelector("#chart"), options);
        chart.render();
      
      
    </script>
}

@* using Microsoft.AspNetCore.Mvc; // If you're using ASP.NET Core
using Newtonsoft.Json;
using System.Collections.Generic;

public class YourModel
{
    public RootObject Data { get; set; }
}

public class SampleData
{
    public string name { get; set; }
    public List<List<double>> data { get; set; }
}

public class RootObject
{
    public List<SampleData> Series { get; set; }
}

public class YourController : Controller
{
    public ActionResult YourAction()
    {
        // Replace jsonString with your actual JSON data
        string jsonString = "[{ ... }]";

        // Deserialize JSON into C# objects
        RootObject rootObject = JsonConvert.DeserializeObject<RootObject>(jsonString);

        // Use the deserialized data as needed
        foreach (var sampleData in rootObject.Series)
        {
            // Do something with sampleData
            string sampleName = sampleData.name;
            List<List<double>> samplePoints = sampleData.data;

            // Your logic here...
        }

        // Your controller logic here...

        // Create an instance of YourModel and assign the deserialized RootObject
        YourModel yourModel = new YourModel
        {
            Data = rootObject
        };

        return View(yourModel);
    }
}
 *@